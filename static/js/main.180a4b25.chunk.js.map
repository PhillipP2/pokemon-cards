{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","src","concat","cardContent","name","alt","CardList","items","map","item","card_component_Card","key","SearchBox","_ref","placeholder","handleChange","type","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateSearch","e","setState","searchField","target","value","state","pokemons","_this2","fetch","then","res","json","data","results","_this$state","filteredPokemons","filter","pokemon","toLowerCase","includes","search_box_component_SearchBox","card_list_component_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"wTAGaA,SAAO,SAAAC,GAAK,OACvBC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QACfH,EAAAC,EAAAC,cAAA,OAAKE,IAAG,2CAAAC,OAA6CN,EAAMO,YAAYC,KAA/D,QAA2EC,IAAI,WACvFR,EAAAC,EAAAC,cAAA,UAAKH,EAAMO,YAAYC,SCFdE,SAAW,SAACV,GACvB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZJ,EAAMW,MAAMC,IAAI,SAAAC,GAAI,OACnBZ,EAAAC,EAAAC,cAACW,EAAD,CAAMC,IAAKF,EAAKL,KAAMD,YAAaM,SCL7BG,SAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,aAAhB,OACxBlB,EAAAC,EAAAC,cAAA,SACAC,UAAU,SACVgB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCGG,qBApCb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAcFI,aAAe,SAACC,GACdR,EAAKS,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrCZ,EAAKa,MAAQ,CACXC,SAAU,GACVJ,YAAa,IALHV,mFASM,IAAAe,EAAAZ,KAClBa,MAAM,8CACHC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIL,EAAKN,SAAS,CAAEK,SAAUM,EAAKC,6CAOxC,IAAAC,EAC2BnB,KAAKU,MAA/BC,EADDQ,EACCR,SAAUJ,EADXY,EACWZ,YACZa,EAAmBT,EAASU,OAAO,SAAAC,GAAO,OAC9CA,EAAQxC,KAAKyC,cAAcC,SAASjB,EAAYgB,iBAClD,OACEhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACgD,EAAD,CACEjC,YAAY,iBACZC,aAAcO,KAAKI,eAErB7B,EAAAC,EAAAC,cAACiD,EAAD,CAAUzC,MAAOmC,YA9BPO,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA1B,EAAA,GAAAS,KAAAiB,EAAAC,KAAA,UAAqBlB,KAAK,SAAAvB,GAAiD,IAA9C0C,EAA8C1C,EAA9C0C,OAAQC,EAAsC3C,EAAtC2C,OAAQC,EAA8B5C,EAA9B4C,OAAQC,EAAsB7C,EAAtB6C,OAAQC,EAAc9C,EAAd8C,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDdS,IAASC,OACPhE,EAAAC,EAAAC,cAACF,EAAAC,EAAMgE,WAAP,KACEjE,EAAAC,EAAAC,cAACgE,EAAD,OAEFC,SAASC,eAAe,SAM1Bf","file":"static/js/main.180a4b25.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n  <div className = \"card\">\r\n    <img src={`https://img.pokemondb.net/artwork/large/${props.cardContent.name}.jpg`} alt=\"pokeon\" />\r\n    <h2>{props.cardContent.name}</h2>\r\n    {/* <p>{props.monster.email}</p> */}\r\n  </div>\r\n);","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.items.map(item => \r\n        <Card key={item.name} cardContent={item} />\r\n      )}\r\n    </div>\r\n  ) \r\n}","import React from 'react'\r\nimport './search-box.styles.css';\r\n\r\nexport const  SearchBox = ({ placeholder, handleChange}) => (\r\n  <input\r\n  className=\"search\"\r\n  type='search'\r\n  placeholder={placeholder}\r\n  onChange={handleChange}\r\n/>\r\n)\r\n","import React, { Component } from 'react';\nimport { CardList } from'./components/card-list/card-list.component';\nimport { SearchBox }  from './components/search-box/search-box.component';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      pokemons: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://pokeapi.co/api/v2/pokemon?limit=20')\n      .then(res => res.json())\n      .then(data => this.setState({ pokemons: data.results }));\n  }\n\n  updateSearch = (e) => {\n    this.setState({searchField: e.target.value});\n  }\n\n  render() {\n    const { pokemons, searchField } = this.state;\n    const filteredPokemons = pokemons.filter(pokemon =>\n      pokemon.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <SearchBox\n          placeholder=\"Search pokemon\" \n          handleChange={this.updateSearch}\n        />\n        <CardList items={filteredPokemons} />\n      </div>\n    );\n  }\n}\n \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}